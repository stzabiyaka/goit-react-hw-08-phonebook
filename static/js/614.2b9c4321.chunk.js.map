{"version":3,"file":"static/js/614.2b9c4321.chunk.js","mappings":"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","sources":["components/AuthNav/AuthNav.styled.jsx","components/AppNav/AppNav.styled.jsx","components/AppNav/AppNav.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/UserMenu/UserMenu.styled.jsx","components/AppBar/AppBar.styled.jsx","components/AppBar/AppBar.jsx","components/Footer/Footer.styled.jsx","components/Footer/Footer.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AuthNavContainer = styled.ul`\n  display: flex;\n  align-items: center;\n  padding: 0;\n  margin-left: auto;\n  margin-right: ${({ theme }) => theme.indent};\n`;\n\nexport const AuthNavItem = styled.li`\n  display: block;\n`;\n","import styled from '@emotion/styled';\n\nexport const AppNavContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-left: ${({ theme }) => theme.indent};\n`;\n","import { useSelector } from 'react-redux';\nimport { AppNavContainer } from './AppNav.styled';\nimport { AppLink } from 'utilities';\nimport { getUserToken } from 'redux/userState';\n\nconst AppNav = () => {\n  const isLogged = useSelector(getUserToken);\n  return (\n    <AppNavContainer>\n      <AppLink to=\"/\">Home</AppLink>\n      {isLogged && <AppLink to=\"contacts\">Contacts</AppLink>}\n    </AppNavContainer>\n  );\n};\n\nexport default AppNav;\n","const { AppLink } = require('utilities');\nconst { AuthNavContainer, AuthNavItem } = require('./AuthNav.styled');\n\nconst AuthNav = () => {\n  return (\n    <AuthNavContainer>\n      <AuthNavItem>\n        <AppLink to=\"login\">Login</AppLink>\n        <AppLink to=\"register\">Register</AppLink>\n      </AuthNavItem>\n    </AuthNavContainer>\n  );\n};\n\nexport default AuthNav;\n","import {\n  useSignOutUserMutation,\n  useGetCurrentUserQuery,\n  getUserToken,\n} from 'redux/userState';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'utilities';\nimport { Circles } from 'react-loader-spinner';\nimport { Menu, Email } from '.';\n\nconst UserMenu = () => {\n  const isLogged = useSelector(getUserToken);\n  const { data, isSuccess } = useGetCurrentUserQuery(undefined, {\n    skip: !isLogged,\n  });\n  const [\n    signOutUser,\n    {\n      isLoading: isSigningOut,\n      isSuccess: isSignOutSuccess,\n      isError: isSignOutError,\n    },\n  ] = useSignOutUserMutation();\n  const handleClick = () => {\n    signOutUser();\n  };\n\n  return (\n    <Menu>\n      {isSuccess && <Email>{data.email}</Email>}\n      <Button type=\"button\" onClick={handleClick}>\n        {isSigningOut ? (\n          <Circles color=\"blue\" width=\"16\" height=\"16\" />\n        ) : (\n          'LogOut'\n        )}\n      </Button>\n      {isSignOutSuccess && <p>You are successfully signed out.</p>}\n      {isSignOutError && <p>Error occured, You are not signed out.</p>}\n    </Menu>\n  );\n};\n\nexport default UserMenu;\n","import styled from '@emotion/styled';\n\nexport const Menu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: ${({ theme }) => theme.indent};\n\n  color: #ffffff;\n`;\n\nexport const Email = styled.p`\n  margin-right: ${({ theme }) => theme.indent};\n  font-size: 14px;\n`;\n","import styled from '@emotion/styled';\n\nexport const AppBarContainer = styled.header`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  padding-top: ${({ theme }) => theme.indent};\n  padding-bottom: ${({ theme }) => theme.indent};\n  background-color: ${({ theme }) => theme.colors.barColor};\n`;\n\nexport const Title = styled.h1`\n  display: block;\n  font-size: 40px;\n  line-height: 1.25;\n  text-transform: uppercase;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.backgroundLightColor};\n`;\n","import { useSelector } from 'react-redux';\nimport AppNav from 'components/AppNav';\nimport AuthNav from 'components/AuthNav';\nimport UserMenu from 'components/UserMenu';\nimport { AppBarContainer } from './AppBar.styled';\nimport { getUserToken } from 'redux/userState';\n\nexport function AppBar() {\n  const isLogged = useSelector(getUserToken);\n  return (\n    <AppBarContainer>\n      <AppNav />\n      {isLogged ? <UserMenu /> : <AuthNav />}\n    </AppBarContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const PageFooter = styled.footer`\n  margin-top: auto;\n  min-width: 300px;\n  width: 100%;\n  padding: 20px 0;\n  background-color: ${({ theme }) => theme.colors.backgroundLightColor};\n  box-shadow: ${({ theme }) => theme.shadow};\n`;\n\nexport const Copyright = styled.p`\n  margin: 0;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const Link = styled.a`\n  color: ${({ theme }) => theme.colors.textDarkColor};\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.accentColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { PageFooter, Copyright, Link } from './Footer.styled';\n\nexport function Footer({ name, href = '#' }) {\n  return (\n    <PageFooter>\n      <Copyright>\n        &copy; 2022&nbsp;\n        {name && (\n          <Link\n            href={href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer nofollow\"\n            title={name + '`s github'}\n          >\n            {name}\n          </Link>\n        )}\n      </Copyright>\n    </PageFooter>\n  );\n}\n\nFooter.propTypes = {\n  name: PropTypes.string,\n  href: PropTypes.string,\n};\n","import { Outlet } from 'react-router-dom';\nimport { AppBar } from 'components/AppBar';\nimport { Footer } from 'components/Footer';\nimport { Suspense } from 'react';\nimport { Circles } from 'react-loader-spinner';\n\nconst SharedLayout = () => {\n  return (\n    <>\n      <AppBar title=\"PhoneBook\" />\n      <Suspense fallback={<Circles width=\"100\" height=\"100\" color=\"blue\" />}>\n        <Outlet />\n      </Suspense>\n      <Footer name=\"Stanislav Zabiyaka\" href=\"https://github.com/stzabiyaka/\" />\n    </>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["AuthNavContainer","styled","theme","indent","AuthNavItem","AppNavContainer","isLogged","useSelector","getUserToken","AppLink","to","require","useGetCurrentUserQuery","undefined","skip","data","isSuccess","useSignOutUserMutation","signOutUser","isSigningOut","isLoading","isSignOutSuccess","isSignOutError","isError","Menu","Email","email","Button","type","onClick","color","width","height","AppBarContainer","colors","barColor","backgroundLightColor","AppBar","PageFooter","shadow","Copyright","Link","textDarkColor","accentColor","Footer","name","href","target","rel","title","Suspense","fallback"],"sourceRoot":""}